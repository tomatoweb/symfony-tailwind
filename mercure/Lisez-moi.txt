
1.
	composer require mercure

2. 
	  .env :

	  # the URL of the Mercure hub, used by the app to publish updates (can be a local URL)
	  MERCURE_URL=http://localhost/.well-known/mercure

	  # The public URL of the Mercure hub, used by the browser to subscribe and connect
	  MERCURE_PUBLIC_URL=http://localhost/.well-known/mercure

	  # The secret used to sign the JWTs
	  MERCURE_JWT_SECRET="demoSecretKey"

2.
  Create PHP, JS and HTML files : 

  	PublishController.php :

        <?php
        namespace App\Controller;

        use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
        use Symfony\Component\HttpFoundation\Response;
        use Symfony\Component\Mercure\HubInterface;
        use Symfony\Component\Mercure\Update;
        use Symfony\Component\Routing\Attribute\Route;

        class PublishController extends AbstractController
        {
            #[Route('/publish', name: 'publish')]
            public function publish(HubInterface $hub): Response
            {
                $update = new Update(
                    'https://example.com/books/1',
                    json_encode(['status' => 'OutOfStock'])
                );

                $hub->publish($update);

                return new Response('published!');
            }
        }


  // templates/home/index.html.twig

        {% extends 'base.html.twig' %}

		{% block title %}Hello HomeController!{% endblock %}

		{% block body %}

		<div class="w-full h-[100vh]" style="opacity: 0.5; background-image:url('{{ asset('images/background.png') }}'); background-repeat: no-repeat; background-attachment: fixed; background-position: center;"> 

		<h2 id="msg" style='color: Crimson'></h2>
		</div>

		{% endblock %}

		{% block javascripts %}

		    {{ encore_entry_script_tags('app') }}   
		    
		    <script>
		      const eventSource = new EventSource("{{ mercure('https://example.com/books/1')|escape('js') }}");
		      eventSource.onmessage = event => {
		        // Will be called every time an update is published by the server
		        message = JSON.parse(event.data).status;
		        document.getElementById('msg').innerHTML += message += '<br>';
		      } 
		    </script>

		{% endblock %}



	https://symfony.com/doc/current/mercure.html
	https://www.youtube.com/watch?v=CpdM3tOIfz8&ab_channel=RahmouniOussama


3.
	Open a Powershell CLI  (mercure.exe works only in Powershell CLI)
	type command: 	.\mercure.exe run --jwt-key 'demoSecretKey' --cors-allowed-origins 'http://localhost:8000' --allow-anonymous

	(options:  .\mercure.exe --help)

4.
	php -S localhost:8000 -t public

	open frontend localhost:8000/home

	we can see in the log powershell that the client has just subscribed:
	{ ..., "caller":"mercure/subscribe.go:204","msg":"New subscriber","subscriber":{"id":"urn:uuid:c1339793-1fb5-48ba-a437-4c7c8ba5eea9","last_event_id":"","remote_addr":"[::1]:54068","topics":["https://example.com/books/1"]}}

6.
	open backend to publish : localhost:8000/publish
	
	Each refresh will update the content of frontend localhost:8000/home via the Mercure hub	